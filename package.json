{
  "name": "testpylot",
  "displayName": "TestPylot",
  "icon": "assets/testpylot-icon.png",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "custom-activitybar",
          "title": "TestPylot",
          "icon": "assets/testpylot-icon.png"
        }
      ]
    },
    "chatParticipants": [
      {
        "id": "testpylot-chat",
        "name": "TestPylot-AAA-Assistant",
        "description": "Implement good python testing practices using the AAA pattern"
      }
    ],
    "views": {
      "custom-activitybar": [
        {
          "type": "webview",
          "id": "testpylot.webview",
          "name": "Dashboard",
          "contextualTitle": "View",
          "icon": "assets/testpylot-icon.png"
        },
        {
          "type": "tree",
          "id": "testpylot.failingtreeview",
          "name": "Tests Overview",
          "contextualTitle": "Tests Overview",
          "icon": "assets/testpylot-icon.png"
        },
        {
          "type": "tree",
          "id": "testpylot.graphdoctreeview",
          "name": "Graphs & Docs",
          "contextualTitle": "Graphs and Docs",
          "icon": "assets/testpylot-icon.png"
        }
      ]
    },
    "commands": [
      {
        "command": "testpylot.vscode-run-tests.runTests",
        "title": "TestPylot: Run Tests"
      },
      {
        "command": "testpylot.vscode-run-tests.runAllTests",
        "title": "TestPylot: Run All Tests"
      },
      {
        "command": "testpylot.vscode-run-tests.updateResults",
        "title": "TestPylot: Update Results"
      },
      {
        "command": "testpylot.vscode-run-tests.getCoverage",
        "title": "TestPylot: Get Coverage"
      },
      {
        "command": "testpylot.vscode-run-tests.updateCoverage",
        "title": "TestPylot: Update Coverage Results"
      },
      {
        "command": "testpylot.vscode-slowest-tests.slowestTests",
        "title": "TestPylot: Find Slowest Tests"
      },
      {
        "command": "testpylot.vscode-slowest-tests.updateSlowestTests",
        "title": "TestPylot: Update Slowest Tests Results"
      },
      {
        "command": "testpylot.vscode-run-tests.updateMemory",
        "title": "TestPylot: Update Memory Results"
      },
      {
        "command": "testpylot.code-tutor.annotate",
        "title": "TestPylot: Test Insights"
      },
      {
        "command": "testpylot.fix-failing-tests.fixFailingTests",
        "title": "TestPylot: Fix Failing Tests"
      },
      {
        "command": "testpylot.fix-coverage.fixCoverage",
        "title": "TestPylot: Fix Coverage"
      },
      {
        "command": "testpylot.optimise-slowest.optimiseSlowest",
        "title": "TestPylot: Optimise Slowest Tests"
      },
      {
        "command": "testpylot.generate-pydoc.generatePydoc",
        "title": "TestPylot: Generate Pydoc"
      },
      {
        "command": "testpylot.acceptSuggestion",
        "title": "TestPylot: Accept Annotation onto corresponding test file for coverage"
      },
      {
        "command": "testpylot.rejectSuggestion",
        "title": "TestPylot: Reject Annotation"
      },
      {
        "command": "testpylot.addSuggestiontoSameFile",
        "title": "TestPylot: Add Annotation to Same File"
      },
      {
        "command": "testpylot.addSuggestiontoMainFile",
        "title": "TestPylot: Add Annotation to corresponding Main File"
      },
      {
        "command": "testpylot.test-history.showPassFailGraph",
        "title": "TestPylot: Show test pass-fail history graph"
      },
      {
        "command": "testpylot.test-history.showCoverageGraph",
        "title": "TestPylot: Show coverage history graph"
      },
      {
        "command": "testpylot.openSettings",
        "title": "Open Settings",
        "icon": "$(gear)"
      },
      {
        "command": "testpylot.optimise-memory.optimiseMemory",
        "title": "TestPylot: Optimise Memory Usage of Tests"
      },
      {
        "command": "testpylot.failingtests.refreshView",
        "title": "TestPylot: Refresh Failing Tests"
      },
      {
        "command": "testpylot.openTestFile",
        "title": "Open Test File"
      },
      {
        "command": "testpylot.runTestsInFile",
        "title": "TestPylot: Run Tests in File"
      },
      {
        "command": "testpylot.runSpecificTest",
        "title": "TestPylot: Run Specific Test"
      },
      {
        "command": "testpylot.exportSnapshotReport",
        "title": "Testpylot: Download Snapshot Report"
      },
      {
        "command": "testpylot.updateSidebar",
        "title": "TestPylot: Update Sidebar"
      },
      {
        "command": "testpylot.failingTestsProvider.showInfo",
        "title": "Show Info",
        "icon": "$(info)"
      },
      {
        "command": "testpylot.graphsDocsProvider.showInfo",
        "title": "Show Info",
        "icon": "$(info)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "testpylot.openSettings",
          "when": "view == testpylot.webview",
          "group": "navigation"
        },
        {
          "command": "testpylot.failingTestsProvider.showInfo",
          "when": "view == testpylot.failingtreeview",
          "group": "navigation",
          "tooltip": "This tree view displays failing tests, slow tests, and memory-intensive tests.\n\nIcons:\n- Red Cross: Indicates a failing test\n- Stopwatch: Indicates a slow test\n- RAM: Indicates a memory-intensive test\n- Green Tick: Indicates a passing test file."
        },
        {
          "command": "testpylot.graphsDocsProvider.showInfo",
          "when": "view == testpylot.graphdoctreeview",
          "group": "navigation",
          "tooltip": "This tree view displays graphs and documentation related to the tests.\n\nIcons:\n- Graph: Indicates a graph\n- Doc: Indicates a documentation file."
        }
      ],
      "editor/title": [
        {
          "command": "testpylot.code-tutor.annotate",
          "group": "navigation"
        },
        {
          "command": "testpylot.runTestsInFile",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "group": "llm-commands",
          "submenu": "testpylot.commands"
        }
      ],
      "testpylot.commands": [
        {
          "command": "testpylot.fix-failing-tests.fixFailingTests",
          "group": "llm-commands",
          "when": "resourceLangId == python && (resourceFilename =~ /test_.*/ || resourceFilename =~ /.*_test.py/)"
        },
        {
          "command": "testpylot.fix-coverage.fixCoverage",
          "group": "llm-commands",
          "when": "resourceLangId == 'python' && !(resourceFilename =~ /^test_/) && !(resourceFilename =~ /_test\\.py$/)"
        },
        {
          "command": "testpylot.optimise-slowest.optimiseSlowest",
          "group": "llm-commands",
          "when": "resourceLangId == python && (resourceFilename =~ /test_.*/ || resourceFilename =~ /.*_test.py/)"
        },
        {
          "command": "testpylot.generate-pydoc.generatePydoc",
          "group": "llm-commands",
          "when": "resourceLangId == python && (resourceFilename =~ /test_.*/ || resourceFilename =~ /.*_test.py/)"
        },
        {
          "command": "testpylot.optimise-memory.optimiseMemory",
          "group": "llm-commands",
          "when": "resourceLangId == python && (resourceFilename =~ /test_.*/ || resourceFilename =~ /.*_test.py/)"
        }
      ],
      "commandPalette": [
        {
          "command": "testpylot.vscode-run-tests.runTests",
          "title": "TestPylot: Run Tests"
        },
        {
          "command": "testpylot.vscode-run-tests.runAllTests",
          "title": "TestPylot: Run All Tests"
        },
        {
          "command": "testpylot.vscode-run-tests.updateResults",
          "title": "TestPylot: Update Results",
          "when": "false"
        },
        {
          "command": "testpylot.vscode-run-tests.getCoverage",
          "title": "TestPylot: Get Coverage",
          "when": "false"
        },
        {
          "command": "testpylot.vscode-run-tests.updateCoverage",
          "title": "TestPylot: Update Coverage Results",
          "when": "false"
        },
        {
          "command": "testpylot.vscode-slowest-tests.slowestTests",
          "title": "TestPylot: Find Slowest Tests",
          "when": "false"
        },
        {
          "command": "testpylot.vscode-slowest-tests.updateSlowestTests",
          "title": "TestPylot: Update Slowest Tests Results",
          "when": "false"
        },
        {
          "command": "testpylot.vscode-run-tests.updateMemory",
          "title": "TestPylot: Update Memory Results",
          "when": "false"
        },
        {
          "command": "testpylot.code-tutor.annotate",
          "title": "TestPylot: Test Insights"
        },
        {
          "command": "testpylot.fix-failing-tests.fixFailingTests",
          "title": "TestPylot: Fix Failing Tests"
        },
        {
          "command": "testpylot.fix-coverage.fixCoverage",
          "title": "TestPylot: Fix Coverage"
        },
        {
          "command": "testpylot.optimise-slowest.optimiseSlowest",
          "title": "TestPylot: Optimise Slowest Tests"
        },
        {
          "command": "testpylot.generate-pydoc.generatePydoc",
          "title": "TestPylot: Generate Pydoc"
        },
        {
          "command": "testpylot.acceptSuggestion",
          "title": "TestPylot: Accept Annotation onto corresponding test file for coverage",
          "when": "false"
        },
        {
          "command": "testpylot.rejectSuggestion",
          "title": "TestPylot: Reject Annotation",
          "when": "false"
        },
        {
          "command": "testpylot.addSuggestiontoSameFile",
          "title": "TestPylot: Add Annotation to Same File",
          "when": "false"
        },
        {
          "command": "testpylot.addSuggestiontoMainFile",
          "title": "TestPylot: Add Annotation to corresponding Main File",
          "when": "false"
        },
        {
          "command": "testpylot.test-history.showPassFailGraph",
          "title": "TestPylot: Show test pass-fail history graph",
          "when": "false"
        },
        {
          "command": "testpylot.test-history.showCoverageGraph",
          "title": "TestPylot: Show coverage history graph"
        },
        {
          "command": "testpylot.openSettings",
          "title": "Open Settings",
          "icon": "$(gear)"
        },
        {
          "command": "testpylot.optimise-memory.optimiseMemory",
          "title": "TestPylot: Optimise Memory Usage of Tests"
        },
        {
          "command": "testpylot.failingtests.refreshView",
          "title": "TestPylot: Refresh Failing Tests"
        },
        {
          "command": "testpylot.openTestFile",
          "title": "Open Test File",
          "when": "false"
        },
        {
          "command": "testpylot.runTestsInFile",
          "title": "TestPylot: Run Tests in File",
          "when": "false"
        },
        {
          "command": "testpylot.runSpecificTest",
          "title": "TestPylot: Run Specific Test",
          "when": "false"
        },
        {
          "command": "testpylot.exportSnapshotReport",
          "title": "Testpylot: Download Snapshot Report"
        },
        {
          "command": "testpylot.updateSidebar",
          "title": "TestPylot: Update Sidebar",
          "when": "false"
        },
        {
          "command": "testpylot.failingTestsProvider.showInfo",
          "title": "Show Info",
          "icon": "$(info)",
          "when": "flase"
        },
        {
          "command": "testpylot.graphsDocsProvider.showInfo",
          "title": "Show Info",
          "icon": "$(info)",
          "when": "false"
        }
      ]
    },
    "submenus": [
      {
        "id": "testpylot.commands",
        "label": "TestPylot Commands",
        "group": "llm-commands"
      }
    ],
    "configuration": {
      "title": "TestPylot",
      "properties": {
        "test-pylot.runNecessaryTestsOnly": {
          "type": "boolean",
          "default": true,
          "description": "Run only necessary tests instead of all tests."
        },
        "test-pylot.copilotEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable GitHub Copilot integration."
        },
        "test-pylot.codeCoverageHighlighting": {
          "type": "boolean",
          "default": true,
          "description": "Enable code coverage highlighting."
        },
        "test-pylot.numberOfSlowestTests": {
          "type": "number",
          "default": 3,
          "description": "Number of slowest tests to display."
        },
        "test-pylot.numberOfMemoryIntensiveTests": {
          "type": "number",
          "default": 3,
          "description": "Number of memory intensive tests to display."
        },
        "test-pylot.snapshotInterval": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "description": "Snapshot interval in minutes. (Extension restart required)"
        },
        "test-pylot.runTestsOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Run tests on any file save."
        },
        "test-pylot.runTestsInBackground": {
          "type": "boolean",
          "default": true,
          "description": "Periodically run tests in the background."
        },
        "test-pylot.saveSnapshotOnTestRun": {
          "type": "boolean",
          "default": true,
          "description": "Save snapshots when tests are run."
        },
        "test-pylot.saveSnapshotPeriodically": {
          "type": "boolean",
          "default": false,
          "description": "Periodically save snapshots in the background."
        },
        "test-pylot.runTestsInterval": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "description": "Background test run interval in minutes. (Extension restart required)"
        },
        "test-pylot.customLLM Endpoint": {
          "type": "string",
          "default": "http://localhost:8000/v1/chat/completions",
          "description": "Custom LLM endpoint to use if GitHub Copilot is not enabled.\nCompatible with OpenAI-compatible APIs. \nSome examples are: OpenAI, vLLM, Ollama, etc."
        },
        "test-pylot.customLLM Model": {
          "type": "string",
          "default": "",
          "description": "Custom LLM model to use if GitHub Copilot is not enabled."
        },
        "test-pylot.customLLM API Key": {
          "type": "string",
          "default": "",
          "description": "Custom LLM key to use if GitHub Copilot is not enabled. (Optional)"
        },
        "test-pylot.customLLM MaxTokens": {
          "type": "number",
          "default": 500,
          "description": "Custom LLM max tokens to use if GitHub Copilot is not enabled."
        }
      }
    }
  },
  "scripts": {
    "clean": "rm -rf out",
    "vscode:prepublish": "npm run compile && npm run copy-files",
    "compile": "tsc -p ./ && npm run copy-files",
    "watch": "npm run copy-files && tsc -watch -p ./",
    "pretest": "npm run compile && npm run copy-files && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "copy-files": "copyfiles -u 1 \"src/**/*.py\" \"src/**/*.html\" out/"
  },
  "devDependencies": {
    "@types/chai": "^5.2.0",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.1.1",
    "@types/node": "14.x",
    "@types/sinon": "^17.0.4",
    "@types/sqlite3": "^3.1.11",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "@typescript-eslint/parser": "^4.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^1.6.2",
    "chai": "4.5",
    "copyfiles": "^2.4.1",
    "eslint": "^7.32.0",
    "glob": "^7.1.7",
    "mocha": "^9.2.2",
    "sinon": "^19.0.2",
    "typescript": "^4.4.3"
  },
  "dependencies": {
    "chartjs-plugin-doughnutlabel": "^2.0.3",
    "sqlite3": "^5.1.7"
  }
}